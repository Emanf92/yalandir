---
import type { ExtendedCoin } from "../interfaces/coin.interface";
import type { CmcCoin, CmcData } from "../interfaces/cmc.interface";
import Layout from '../layouts/Layout.astro';
import coins from '../data/coins.json';
import type { Coin } from "../interfaces/coin.interface";
import CoinCard from "../components/CoinCard.astro";

const CmcApiKey = import.meta.env.CMC_KEY;

const allCoins = coins.map(coin => coin.cryptoId).join(",")

// X-CMC_PRO_API_KEY
const CmcUri: string = 'https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest';
const response = await fetch(`${CmcUri}?symbol=${encodeURIComponent(allCoins)}`, {
    method: 'GET',
    headers: {
        "X-CMC_PRO_API_KEY": CmcApiKey,
    },
});
const cmcData: CmcData = await response.json();

const fullCoins: ExtendedCoin[] = coins.map((coin: Coin): ExtendedCoin => {
    const cryptoList: CmcCoin[] = cmcData.data[coin.cryptoId];
    const crypto = !!cryptoList && cryptoList.length > 0 ? cryptoList[0] : null;
    return {
        ...coin,
        crypto: crypto,
    }
})
---
<Layout title="Coins">
    <div class="page">
        <h1>Monete</h1>
        <div class="coins-container">
            { fullCoins.map((coin: ExtendedCoin) => {
                return <CoinCard icon={`/images/coins/${coin.short}.jpg`} title={coin.name} short={coin.short} value={coin.crypto?.quote.USD.price} />;
            })}
        </div>
    </div>
</Layout>
<style>
    .page {
        padding: 50px;
    }
    h1 {
        margin: 0;
        color: white;
    }
    .coins-container {
        margin-top: 30px;
        display: grid;
        flex-wrap: wrap;
        grid-template-columns: 1fr 1fr;
        grid-gap: 30px;
        justify-content: center;
    }
</style>